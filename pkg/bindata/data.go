// Code generated by go-bindata. DO NOT EDIT.
// sources:
// pkg/bindata/.DS_Store
// pkg/bindata/environment/jenkins-jvm-environment
// pkg/bindata/environment/required-plugins
// pkg/bindata/init-groovy/0-jenkins-config.groovy
// pkg/bindata/job-scripts/delete-job.sh
// pkg/bindata/job-scripts/install-dsl-job.sh
// pkg/bindata/job-scripts/install-xml-job.sh
// pkg/bindata/jobdsl/seed-job-dsl
// pkg/bindata/plugin-scripts/install-plugin.sh
package bindata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _Ds_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5d\x6c\x14\xd7\x15\x3e\xdf\x62\xe0\xde\x31\x3f\xd7\x21\x01\x33\x26\xcb\x26\x26\x60\x8a\x21\x6b\x6c\x30\x10\xa0\xeb\xbf\x80\x63\x10\x08\xdb\xb1\xb1\x49\x9c\xdd\x9d\xc1\x9e\x74\x3d\xb3\xd9\x99\x5d\x1b\x1c\x57\x34\x69\xd2\x3e\xa4\x81\xe6\x2d\x84\xaa\x55\x7f\x1e\x22\xa8\x54\x55\x32\x95\xda\x3e\x24\x7d\x48\x68\x48\xd5\x10\xd1\x92\xa6\x55\x2a\x35\xad\xd4\xbe\xa5\x4d\x9b\x36\x7d\x69\x35\x77\xc6\xce\xee\xc6\xbb\x98\xa0\x04\x2b\x9a\x23\xad\xce\xde\x7b\xce\xdc\xb9\x33\xf3\xdd\xef\x3b\x77\x34\x44\x84\xd6\xac\xd6\x40\x54\x47\x44\x8c\x3c\x2f\x96\x10\x81\x11\x45\x2a\xa9\xc0\x98\xff\xfb\x98\x2d\x70\xc7\x21\xa2\x5a\xef\xbf\x20\x4a\xd0\x66\xb2\x29\x49\x19\x32\x66\x3b\x60\x9e\x59\xc8\x9f\x7f\x05\x11\x55\xd2\xa3\x64\x15\xcc\x3f\x4d\x0e\xd9\x89\x31\x3b\x9d\x48\x59\x09\x22\xfa\x65\x22\x9d\x32\x6c\x27\x1a\xbd\x86\xd0\x82\x8a\x85\x8b\x16\x33\xc6\x2a\xd9\x52\xf6\x50\xf7\x88\x35\xd6\xed\xc4\x9d\xac\xdd\x1a\xcf\x0c\xba\xad\xc3\x71\x67\x24\xe1\xff\xef\xb1\xac\xd4\xcc\xff\x78\xe2\x41\x43\x1f\x1b\x12\xb7\xb7\x59\xa6\x13\x37\x4c\x3d\x23\x0f\x36\x34\x3d\x11\xcf\x1c\xeb\x33\x4c\xcd\x1a\x6b\xb5\xb2\xa6\x66\x0f\xe6\x05\x38\xe7\x8c\x0f\x89\xea\x89\x89\xa6\x68\x73\x7d\xa4\x21\xda\x30\x59\x1f\x99\x68\x6e\x8e\xd6\x47\x9a\x1a\xb7\x4f\x4e\x72\xb6\xea\x9e\x86\x3d\x9d\x8f\x8c\x9e\x38\x39\xf1\xf8\xe4\x97\x9f\xf7\xae\x0e\xf0\x2f\x73\x79\xd1\x65\x9f\x95\x63\x7f\xd6\x37\x3b\xb0\xc0\x02\x0b\x2c\xb0\x79\x63\xbe\x40\xb0\xca\x5b\x3d\x91\xc0\x02\x0b\x6c\xde\x99\xcb\x0f\x11\xdf\xc7\x7c\x7f\xca\xf3\xf0\xe3\x21\xdf\x57\xe4\x1d\x23\x7c\x1f\xf1\x7d\xcc\xf7\xa7\x3c\x0f\x3f\x2f\xe4\xfb\x0a\xdf\x33\xdf\x0b\xdf\x47\x7c\x1f\xf3\xfd\x29\xcf\xfb\xa4\x85\x90\xef\xfd\x33\xc3\xdf\xa1\x40\xf8\x3e\xe2\xfb\xd8\xa7\x73\x6f\x02\x0b\xec\xf3\x60\x77\x94\xde\xfb\x6a\x76\x32\x95\xb0\xac\x14\x4a\xa7\xa4\x86\x1b\xba\x93\xd6\x68\xda\x1b\x6b\xe1\x3b\x65\x32\xed\x5c\x9b\xb7\x91\x0e\x3d\x37\xbd\x91\x7e\x6b\x7a\x23\xcd\x15\x65\xc9\xfe\x4e\xa5\x6b\x48\xdc\x96\x33\xf4\xb1\x43\x69\xc7\xb0\x4c\xfb\x41\x3d\x63\x1b\x96\x39\x24\x96\xdb\x23\xd6\x58\x67\xd2\x32\x0f\x67\xf4\x9c\xdc\x3f\x57\x25\xe3\xa9\x64\x36\x15\x77\xf4\x96\x54\xaa\xdb\x38\xa9\xdb\x7d\x49\x2b\x95\x1d\x35\xed\x7e\x47\x1f\x77\xdc\x9e\x01\xdb\xca\x38\x6d\xb2\x73\x48\x88\xac\xad\x1f\xd1\x53\x71\xc7\xc8\xe9\xed\x71\x47\xb7\xfb\x8d\xa4\x65\xba\x69\x02\x9c\x9f\x5f\xba\x32\x5c\xbb\xa1\xbe\x61\xfb\x7d\x5f\x6c\xbf\xba\x6c\xb9\xa8\xba\x6d\x85\xa2\x0c\x18\x9a\x6e\x3a\xc6\x71\x43\xcf\xf4\x8e\x19\x9a\x33\x72\x34\x6e\x27\x75\x53\x33\xcc\xe1\xbe\x9c\x61\x1b\x89\x94\xde\x63\xc6\x47\xf5\x2a\xd4\x73\x7e\x75\x55\xf5\xea\x65\x6a\x8d\x7a\xe7\x74\xa8\xf8\x10\x26\x6a\x59\x7f\x36\x61\x3c\x96\x35\x9c\x13\xf2\x1c\x6b\x23\xaa\x72\x4c\x8b\x3b\xfa\x41\x4b\x73\xcf\xa2\x89\x29\xc6\x65\x64\x5d\x44\x55\x07\xdd\x48\x5b\x46\x8f\x3b\xba\xc6\xd8\xd5\xaa\xe5\x62\x99\xb2\x51\xdd\xc4\x45\x9c\xf5\xd8\xc6\x49\xdd\xeb\xd9\xa2\x44\xb9\xb0\x79\xcf\x97\x0c\x53\x93\x3d\x6a\xa3\xb2\x8d\x09\x8d\xf7\xa6\xe2\x09\x3d\xe5\x75\xed\x50\x76\x31\xd1\xc5\xfb\x72\xde\xed\xf4\x3a\x57\x28\x7b\x19\xef\x4f\x5a\xa3\xa3\xba\xe9\xd8\xf2\xb4\xb1\x16\x55\x7d\xd8\x3d\xed\x81\xb8\xed\x1c\x4a\xeb\xa6\xae\x89\x4b\x8c\xc9\x58\x47\x44\x55\x8f\xba\xb1\x16\x4d\x73\x27\x54\x1b\xab\xf3\x1e\xb9\xbc\x05\xbc\x36\x16\xf5\xe1\xc4\x68\x35\x6d\xa1\x18\xf5\xd0\x31\xd2\x29\x4d\x4f\xd2\x33\xf4\x2c\x9d\xa6\x33\x74\x8e\x7e\x40\x3f\xa2\x8b\xf4\x12\x5d\xa2\x5f\xd1\x1b\x74\x85\xde\xa4\xdf\xd3\xbb\xf4\x37\x7a\x9f\xfe\x49\x1f\xd0\xbf\x41\xe0\x58\x89\x6a\xac\x86\x8a\x5a\xdc\x8b\x28\x1a\xb0\x0b\xf7\x61\x0f\xf6\xa2\x0d\x07\x70\x10\x87\x70\x18\xbd\x78\x18\x43\x88\x23\x81\x11\x3c\x86\x0c\x1c\x64\x31\x89\xa7\xf1\x35\x7c\x1d\xdf\xc4\x59\xbc\x88\xf3\xb8\x80\x1f\xe2\x22\x5e\xc2\xcb\xf8\x05\x2e\xe3\x0d\x5c\xf1\x26\x17\x9a\x7e\x23\x72\xa0\x70\x0d\xe0\xed\xb2\xb8\xf5\x5f\x00\x85\x8e\xce\x8a\xdb\xf6\x0e\x65\xdf\x2d\xc2\xed\xef\x96\x7a\x60\xbd\xfd\x8e\x95\x6b\xd7\x6d\xdc\xd2\xb8\x63\x4f\xcb\xcc\x23\x2d\x7a\x92\xf9\x78\x92\x00\xf2\x10\x22\x91\x33\x8d\x0c\xf9\x2c\x0b\x20\xe9\xc2\x5a\xad\x59\xa3\x84\x7b\x0d\x53\xd3\xc7\x4b\xad\x03\xb1\xd8\x5d\x04\xec\xaa\x5a\xbd\x7a\x55\xf8\xae\x70\x2d\x13\x97\x98\xf0\x9b\xeb\xc3\x75\x4c\x4c\x31\x11\x92\x63\x7d\x61\x53\x58\x11\x0b\x44\x9c\xc9\x15\xa3\xde\x1b\x55\xc2\x62\xa1\xd0\x38\x93\xcd\xa6\x6d\x8a\x22\x2a\x84\xed\xad\x27\x75\xe7\x2e\x25\x2c\x16\x89\x2e\x7f\x64\x65\x8d\x12\xe3\x5c\x90\xd7\x58\x1f\xe6\xfc\x93\xc0\xf0\x7b\x74\x81\x7e\x46\xaf\xd2\xeb\xf4\x26\x5d\xa3\x3f\xd2\x9f\xe9\xef\xf4\x5f\x10\x16\x41\xa0\x1a\x2a\xee\x44\x18\x6b\x51\x87\x8d\xd8\x84\x7a\x6c\x41\x33\x76\xf8\x20\xbc\x1f\xfb\xf1\x00\xba\x70\x00\xbd\xe8\xc3\x51\x0c\x60\x10\x1a\x8e\x63\x04\x06\x1e\x85\x8d\x2c\xc6\x30\x8e\x13\x78\x02\x4f\xe2\xab\x78\x1a\xa7\x71\x46\x02\xf2\xdb\xf8\x4e\x11\xfc\xf6\x17\xc1\xef\xc5\xd2\xf0\x1b\xb5\xda\xdb\xb5\xac\x93\x24\xba\xf6\xd4\x9e\x57\xfe\x92\x2c\x97\xa9\xcd\x31\x33\x3d\x92\x4f\xda\xb2\x4e\x2a\x91\x99\xeb\xce\x98\x29\xcb\x1c\xf6\x6b\xbf\x45\x7e\x96\x46\x36\xa5\x0a\xa9\x1f\x5a\x71\x3c\x7f\xe6\x4d\x1b\x7e\xf3\xe1\xc7\xe3\x5a\xd9\x78\xe1\x2c\x65\x55\xb7\x8c\xd2\x94\xa2\x2c\x0d\x93\x41\xe6\x3c\x7f\x53\xdb\xb8\xb5\xb9\x3e\xb2\x75\x7b\xe3\xcd\xbd\xa9\xbd\xde\x45\xe7\x4b\x74\xd9\xc4\x22\xa1\xbe\xee\xc0\xe5\xe5\x9a\xf3\x25\xfb\x3b\x1f\xe8\x9a\x85\x9f\x6e\x9e\xf4\x66\x18\x6e\x56\x52\xe5\xb3\xa8\x35\x5f\xc1\xef\x28\xa5\xbb\x79\x2a\xce\x5d\x92\x92\x44\xe1\xb2\x4b\xd5\x8d\xa9\x35\x8f\xa8\x77\x73\x31\xc5\x0a\xe9\xd1\x8d\xa8\x11\x75\x3d\x63\xf9\xfc\x2a\x15\xb6\x6e\xa3\xca\x25\xd1\x4a\xb2\x73\x7b\x36\x6f\xe1\x9e\x52\x4b\x82\x73\x7b\xb6\x36\x72\xd5\xe3\x61\x49\x81\x6e\x57\xf3\x0e\xae\x4e\xf3\xb1\x64\x3e\xb7\x73\xf7\x0a\xae\xce\x10\x3b\xf7\x14\x59\x6d\x51\xdb\x5c\x9e\x2d\xe2\xf9\xe9\x29\xed\x63\xec\x23\xbd\x2e\xa4\xc9\x19\x96\x14\x90\x3c\x59\x4f\x7b\xe9\x08\x0d\x50\x92\x4c\x1a\xa3\x67\xe8\x1b\x92\x29\x5f\xa0\xef\xd3\x05\xfa\x31\xfd\x9c\x5e\xa5\x4b\x74\x99\x5e\xa7\x2b\xf4\x36\xfd\x89\xfe\x4a\xff\xa0\xf7\xe9\x5f\xf4\x01\xfd\x0f\x0c\x1c\x95\x58\x82\xd5\xb8\x1b\xb5\x58\x87\x28\x76\x62\x2f\x62\x68\x41\x2b\xba\x70\x18\x47\xd0\x8d\x1e\x3c\x84\x24\x74\x1c\xc7\x30\xd2\x18\xc7\x49\x4c\xe0\x71\x3c\x85\x67\x25\x3f\x3e\x8f\xb3\x38\x87\x6f\xe1\x02\xa6\x70\x11\x3f\xc1\xcb\x78\x0d\xbf\xc6\x5b\x73\x90\xeb\xeb\xa1\xb7\x8c\x68\x73\xbe\xa4\xe3\xfe\x7d\xad\xb7\x06\xbd\x9f\x95\x66\xf3\x70\x29\x70\x7b\x5a\xce\xdc\xd5\x20\x16\x4b\x31\x8d\xdc\x55\x53\x23\x98\x2c\xf6\xdc\xe6\x3d\xeb\x6b\x6a\x44\x48\x4c\x31\x4f\x95\xf9\xa6\x9a\xcd\x6e\xdd\x29\x16\x78\x43\x47\xf9\x56\xb7\xc4\x14\x0b\xbd\xe8\x36\xde\xec\xd6\xa0\xa2\xc2\x8b\xee\xe2\xbb\xdd\x6a\x53\x2c\x92\x43\xed\x5d\xe3\x2a\x36\xe7\xb2\xd1\xba\xbe\x86\x0b\x30\x5e\x02\x8e\x65\xc0\xf8\x5d\x3a\x4f\x3f\xa5\x57\xe8\x32\x5d\xa1\xdf\xd2\x3b\xf4\x2e\xbd\x47\x1f\x02\x58\x8c\x2a\xac\x42\x35\x6a\xb0\x06\x61\x6c\xf0\x45\x7b\x33\xb6\xfb\xa2\xbd\x1b\x1d\x52\xb6\x3b\xd1\x85\x1e\x29\xdb\xfd\x18\x40\x52\xca\xf6\x30\x0c\x64\xa4\x6c\xe7\x30\x8e\xaf\x48\xd1\x76\x61\xe9\x8a\xf6\x73\x78\x61\x4e\xa2\x5d\x16\x84\xf9\x02\xb8\x2d\x72\xfa\xe0\xf5\xf3\xb5\x1b\xca\xbf\x51\x81\x2c\x12\xf3\xc0\x02\x23\xa2\xa5\xb2\xfa\xd3\xc9\xa4\x1c\x19\x94\x21\x8b\x4c\x1a\x95\x6d\xa7\xa8\xc2\x7b\xa2\x74\x66\x1e\xd4\xcf\xbd\x37\xa8\xfc\xa1\x5c\xa6\x36\xc7\xcc\x59\xab\x54\x17\xd6\x06\x39\xb4\x99\x86\x65\xb6\x45\x39\x3a\x31\xcf\x2a\xbf\x1d\xd1\xa6\xfa\xc8\xb6\xa6\x9d\x37\x5d\xf9\x95\xb8\xdc\xc2\xd7\x32\xb3\xa6\x14\x3e\xb9\xc5\x67\xca\x64\x06\x75\x5e\x50\xe7\xcd\xe7\x3a\xaf\x34\x6e\x83\x0a\x2f\xa8\xf0\x3e\xf5\x0a\xaf\x04\xfc\xf2\x04\x6f\xe2\x3f\xaf\x9d\xaa\x2b\x97\xa9\xcd\x31\x73\x96\x7a\xae\x44\x66\x7e\x25\xf7\xc9\xf7\xff\x44\x0b\xbd\x56\x5d\x25\x11\x75\x94\xfe\xfe\x2f\xb0\xc0\x02\xfb\x1c\x1b\x2a\xda\xbb\xdb\x5b\xcb\xec\x0b\x43\x7e\x05\xfe\xc8\xf4\x01\xfe\x87\x00\x34\xcb\x47\x00\xf0\x3f\x16\x06\x51\x94\x3e\xca\x99\x1f\x1f\x01\x04\xfa\x1f\xe8\x7f\xa0\xff\x52\xff\xff\x1f\x00\x00\xff\xff\xd9\x7c\x6b\x1d\x04\x30\x00\x00")

func Ds_storeBytes() ([]byte, error) {
	return bindataRead(
		_Ds_store,
		".DS_Store",
	)
}

func Ds_store() (*asset, error) {
	bytes, err := Ds_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".DS_Store", size: 12292, mode: os.FileMode(420), modTime: time.Unix(1534797400, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _environmentJenkinsJvmEnvironment = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xf2\x72\x0c\x73\x8c\xf7\x0f\x08\x09\xb6\xd2\x8d\xc8\x2d\x36\x34\x30\x32\xc9\x55\xd0\x8d\xc8\xad\x80\xb2\x5c\xb2\x52\xf3\xb2\x33\xf3\x8a\xf5\x32\xf3\x8a\x4b\x12\x73\x72\xf4\x8a\x4a\xf3\x82\x53\x4b\x4a\x0b\xc2\x33\xab\x12\x8b\x52\x6c\xd3\x12\x73\x8a\x53\x91\x94\x39\xfb\x78\xea\xa5\x64\x16\x27\x26\xe5\xa4\xa6\xd8\x96\x14\x95\xa6\x72\x79\xb9\xfa\x79\x7b\xfa\x05\x43\xed\xd0\x4d\x2c\x4a\x2f\xcd\x4d\xcd\x2b\x29\x0e\x4a\x4d\xcc\xc9\xd5\x2b\x48\x2c\x2e\x2e\x4f\xd1\x53\xd1\x70\x74\xf1\xf5\xf4\x8b\x0f\x0d\x76\x0d\xd2\xb4\x85\xf1\x02\x1c\x83\x83\xc3\xfd\x83\x5c\x34\x15\x30\xf4\x15\xe5\xe7\xa4\x16\xe3\xd0\x06\xe6\x01\x02\x00\x00\xff\xff\xca\x81\xb8\xf8\xd8\x00\x00\x00")

func environmentJenkinsJvmEnvironmentBytes() ([]byte, error) {
	return bindataRead(
		_environmentJenkinsJvmEnvironment,
		"environment/jenkins-jvm-environment",
	)
}

func environmentJenkinsJvmEnvironment() (*asset, error) {
	bytes, err := environmentJenkinsJvmEnvironmentBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "environment/jenkins-jvm-environment", size: 216, mode: os.FileMode(420), modTime: time.Unix(1532036458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _environmentRequiredPlugins = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\x41\x0a\x42\x31\x0c\x04\xd0\xbd\x77\xc9\x05\xbc\x4d\xda\x8e\x35\xbf\xa1\xf9\xa4\xa9\x1f\x3c\xbd\xb8\x08\x08\x2e\x93\xc7\x0c\x53\x1d\x0d\x33\x84\x75\xdd\x95\x03\x2b\x6e\x65\x8b\x36\x2a\x6a\x75\xc0\xe9\xd4\xdd\x65\xa6\x1d\x56\xa8\x2d\xcd\x93\x77\x3c\xcd\xe5\x0d\x3a\xdd\x0e\xd4\x48\xb8\xcc\xc7\x43\xed\x22\xee\xdd\xd1\x39\xcc\x93\xc6\x2e\xf0\x89\xc0\xfa\xff\xd0\xcf\x9c\x6f\xe5\x4b\x1a\x32\xf8\x09\x00\x00\xff\xff\xf6\x96\x03\xe4\xaa\x00\x00\x00")

func environmentRequiredPluginsBytes() ([]byte, error) {
	return bindataRead(
		_environmentRequiredPlugins,
		"environment/required-plugins",
	)
}

func environmentRequiredPlugins() (*asset, error) {
	bytes, err := environmentRequiredPluginsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "environment/required-plugins", size: 170, mode: os.FileMode(420), modTime: time.Unix(1534541787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _initGroovy0JenkinsConfigGroovy = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\xb0\xee\xc1\x52\x11\x33\x40\xd1\x53\xdb\x2c\x60\x64\xb7\x6d\x52\xef\xd6\x8d\xbb\xe8\x61\xb1\x28\x68\x6a\x2c\xd3\xa5\x38\xc6\xcc\xd0\xd9\x34\xf0\x7f\x2f\x44\xc9\xb6\x94\x38\x41\x7b\x48\x00\x52\x8f\x6f\x3e\xde\xbc\xf1\xd7\x5f\x55\x84\xb8\x7b\xc8\x32\x57\x6f\x91\x44\x6d\x20\xfc\xed\x02\xeb\x1a\x4b\xf0\xfa\x9b\xc3\xf5\x3a\x96\x8c\x41\x33\xd8\x48\x4e\x1e\x4e\x1f\x86\xf8\xdb\xf6\x34\x43\x6b\xc4\x61\xb8\xc6\xb0\x72\x55\xa4\x74\x78\x89\xca\x32\xad\xf4\x5b\x58\x99\xe8\xe5\x9a\x62\xbd\xbc\x61\x8e\x40\x4f\x03\x1c\xf1\xfc\x6d\x7d\x0a\x8f\x54\xe9\x0e\x61\x9d\xde\xfa\x58\x35\x58\x13\x65\x8d\xe4\xfe\x81\x2d\xe1\x06\xac\xfc\x6f\x3c\x0b\x19\x81\xea\x4c\x9d\xc7\x34\x7e\x8f\x10\xe1\x46\xa0\x9e\x46\x59\x43\x10\x67\x8d\x20\x9d\xad\x78\x63\x76\x66\x8b\xcc\xa0\x37\xb8\x2c\xd9\xeb\xe6\xef\x2d\xfb\x85\x25\xb7\x95\x19\x9a\xb2\x57\xee\x53\x6c\x9b\xe3\xa1\xb3\xb7\xb8\x7c\x6f\x82\xa9\xa0\x86\x20\x59\x56\xc2\x4a\xb9\xc0\x62\x82\x05\x75\xa5\x3a\x90\xae\x40\x6e\xba\xdb\xbc\xc8\xb6\xe4\x82\xf8\xa0\x46\x93\xc9\x1b\x65\x09\x8c\xb8\x50\x29\x8f\xd6\x78\x15\x19\x48\x8d\x1f\x1f\xf5\x47\x06\xda\xef\xc7\xa3\x96\xb3\xd5\xe8\x0e\x8c\xaf\xd5\x95\x0a\x70\xaf\x7e\x49\x37\x73\x72\x3b\x23\xb0\xe8\x9a\x90\x00\xf9\xca\x78\x86\x22\xeb\xbd\xd1\x29\x0a\x4c\xad\xc5\x18\x24\xef\xf1\x5f\xa4\x60\x73\xc3\x7c\x8f\x54\xee\xf7\xe3\x22\x3b\xe4\xaf\x19\x64\x48\xdc\x63\x2c\xda\xbc\x0e\xba\x74\x49\xfd\x14\xbd\xbf\xc6\x20\x84\xfe\xb7\x60\x61\x86\x55\x05\xe5\x4d\x98\x76\x72\x26\x11\x16\xdd\x93\xbc\xc8\x8e\xaa\x32\xc8\xd4\x7b\xbc\x9f\x06\x0c\x0f\x35\x46\xbe\x03\x53\x1e\xea\xe8\xe7\x73\x9e\xe9\xc0\x53\x64\xc3\xde\x32\x48\x6a\x6d\x37\x2b\x2a\x92\x6f\x7b\x4b\xbe\x6d\xed\x66\x68\x8f\x93\x62\x67\x0d\xd3\xc8\x98\x17\x4f\x1f\x35\x69\x7d\x24\x9f\x9f\x88\xcf\x42\xa6\x65\xed\xc2\xb4\x2c\x09\x98\x13\x36\x5d\xbc\xab\x8d\x7b\xe1\x89\xd9\x35\xb3\x72\xbe\xa0\xb8\x55\x65\x6b\x50\x65\x1b\x87\xb2\x72\xc9\xa3\xa3\x41\xb3\x7a\xe6\xcd\x1b\x75\x9e\x7b\x3a\x17\x8a\x50\xbc\x12\xe5\xf6\xc3\x6c\x3e\xca\x16\x20\x3f\x2e\x84\x5c\xa8\xde\x28\x53\x41\x90\x39\xa1\xa0\x45\xcf\x33\xc7\xa2\xae\xd4\xa7\x71\x03\xfc\x6e\x62\x31\x04\xb0\xd2\x4c\xd5\xdc\x85\x6a\xfc\x79\x28\xde\xe0\x69\xfe\x9c\xe9\xc9\xec\x79\xb3\x83\xf6\x0d\x92\xe4\x8f\x8f\x4a\x1f\x4f\x6a\xbf\x1f\x82\x3f\xc4\xfa\xdd\x17\xb0\x51\x90\x38\x41\x8f\xa7\x04\x1d\x16\x08\xc1\x2c\x3d\xa8\xc4\xa6\x04\x55\x6d\x58\x80\xd4\x61\x95\x28\x8e\x4b\x7e\x60\x81\xba\xd7\x4f\x17\x9a\x45\x84\x34\xf0\x72\xd2\xf0\xcf\xb5\x13\xf0\x8e\xe5\x2e\x7a\xd0\xd6\x1b\xe6\xa2\x49\xe9\x7d\x62\xfd\xd5\x79\xbf\xb8\x77\x62\xd7\xdd\x3c\xff\xf0\x72\xb7\xbb\x6d\xa7\x4c\x7f\xca\x47\xd9\x7f\xd8\x6c\xed\x68\x36\xff\x07\x18\xce\x0b\x6d\xca\x32\xa9\xff\xb3\xc7\xa5\xf1\xe7\xb9\x12\xe0\x0f\x72\x55\x05\x8d\xca\xcd\x6e\xe0\x17\x4c\xfb\xda\xb4\x30\x40\xa9\x36\xb8\x1c\x65\x69\xdc\x86\x0b\x35\xc5\x38\xb7\x35\xf3\x45\xea\xb5\xc6\x28\x17\xea\xd3\xf7\x9f\x2f\xda\x55\xe2\x3c\xe4\x63\x3d\x2e\x8a\x42\x53\x0c\x2d\x53\x7e\xfa\x72\xb9\x33\x74\xd9\x99\xe6\xaf\x35\xd6\x70\xe9\x82\x13\xdd\xfe\x7a\xea\xf2\xb2\xc9\x65\xb2\xc1\xe5\xa4\x64\x3f\x2e\xb4\xc0\x17\x79\x96\xb9\xd9\x35\x89\x1f\x24\xee\x9b\xa7\x33\x5f\x96\xfd\x1b\x00\x00\xff\xff\x83\x27\xe3\xa0\x90\x07\x00\x00")

func initGroovy0JenkinsConfigGroovyBytes() ([]byte, error) {
	return bindataRead(
		_initGroovy0JenkinsConfigGroovy,
		"init-groovy/0-jenkins-config.groovy",
	)
}

func initGroovy0JenkinsConfigGroovy() (*asset, error) {
	bytes, err := initGroovy0JenkinsConfigGroovyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "init-groovy/0-jenkins-config.groovy", size: 1936, mode: os.FileMode(420), modTime: time.Unix(1532381258, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobScriptsDeleteJobSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x51\x6b\xdb\x30\x1c\xc4\x9f\xab\x4f\x71\x55\x0b\x69\xa1\x8a\xca\xf6\x96\xd1\x8d\xd2\xad\x25\xd9\x58\x46\x12\x58\x5e\x65\xeb\xbf\x58\x8e\x22\x79\x92\xec\x05\x32\x7f\xf7\x61\x25\x2c\x1b\xf4\x4d\xe8\x7f\xdc\xfd\xee\xae\x2e\x65\x1b\x83\x2c\x8c\x93\xe4\x3a\x14\x2a\x56\xac\x09\xc6\x25\x72\x1d\x63\x57\xf8\xae\x4c\xc2\x0f\x1f\x30\x23\xb7\x35\x2e\x22\x79\x58\xaf\x34\xfb\x55\x19\x4b\xb8\x44\xd9\x06\x0b\x11\x21\x44\x45\x4a\x43\x88\x40\x3f\x5b\x8a\x09\x2f\x9f\x56\x38\x1c\x30\x7e\x6c\x0c\xfa\x1e\xbf\xb1\x09\xd4\x80\xbf\xb9\xbf\xc7\xfc\x33\xc7\x7b\x48\x4d\x9d\x74\xad\xb5\xef\x98\xf6\xec\x82\xca\xca\x83\x3f\x7d\x99\x4e\x72\xa8\x71\x9b\x9c\x5b\x1f\x73\xc7\x63\xce\x2e\xa2\x25\x6a\xf0\x96\x69\xef\x68\x80\xdb\x50\xc2\xd3\x72\xf1\x8c\x26\xf8\x44\x65\x32\xde\x21\xf9\x2d\x39\x76\x34\x7b\xa1\x94\x7d\x5e\xd5\x70\x56\x86\x76\x57\xac\x86\xf7\xc3\xf5\x4d\xee\x31\x3a\x03\xe7\xe3\x34\xc6\x96\x82\x54\x8d\x91\xfb\x9d\xfd\xb0\x6f\x54\xaa\x1e\x4a\xef\x4a\x95\x6e\xa4\xcc\x92\xc5\xb1\xee\xb3\x21\xab\xef\xf8\x84\xdf\x9d\xfe\x6f\x47\xb7\x03\xa2\x26\x4b\x89\x50\xfb\xe2\xc4\xf4\xa8\xf5\x80\x54\xfb\x22\xaf\x33\xf3\xc5\x57\xb5\x23\xf4\x3d\x67\x7f\xa7\x5c\xe3\xdb\x7c\xb9\xfa\x97\xa6\xf6\x85\xfc\x5f\x2e\xb5\xff\x98\xbd\x47\x10\xdd\x69\x7d\x0a\xe0\x6b\x31\xb4\x15\xb9\xd6\x04\xd7\xe7\x8e\xfc\x4f\x00\x00\x00\xff\xff\xad\x69\x16\x93\xeb\x01\x00\x00")

func jobScriptsDeleteJobShBytes() ([]byte, error) {
	return bindataRead(
		_jobScriptsDeleteJobSh,
		"job-scripts/delete-job.sh",
	)
}

func jobScriptsDeleteJobSh() (*asset, error) {
	bytes, err := jobScriptsDeleteJobShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job-scripts/delete-job.sh", size: 491, mode: os.FileMode(420), modTime: time.Unix(1534797572, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobScriptsInstallDslJobSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xd1\x4e\xdb\x30\x14\x7d\xc6\x5f\x71\xb9\x20\x15\x24\x5c\x57\xdb\x5b\x46\xd9\x26\x06\x08\x86\xd6\x89\x56\x02\x69\xda\x83\x93\xdc\x36\x0e\x8e\x9d\xd9\x4e\x8b\xd4\xe5\xdf\x27\xbb\xd1\xfa\xb2\x4a\x7b\x4a\xe4\x7b\x7c\xce\xb9\xc7\xe7\xe4\x58\x74\xde\x89\x5c\x19\x41\x66\x0d\xb9\xf4\x15\x6b\x9d\x32\x81\xcc\x9a\xb1\x13\x78\x96\x2a\xc0\xd2\x3a\x78\x20\xf3\xaa\x8c\x87\x60\x41\x5b\x59\xb2\x4d\xa5\x34\xc1\x31\x14\x9d\xd3\xc0\x3d\x70\x5e\x91\x2c\x81\x73\x47\xbf\x3a\xf2\x01\xee\x6e\x16\xb0\xdd\xc2\xf8\x73\xab\xa0\xef\xe1\x37\xac\x1c\xb5\x80\xef\x26\x13\x98\x7d\x45\xb8\x02\x51\xd2\x5a\x98\x4e\xeb\x0f\xac\xb4\xec\x88\x8a\xca\x02\x5e\x3f\xde\x67\x49\x54\x99\x55\xd2\xad\x77\xba\xe3\x31\xb2\x23\xaf\x89\x5a\x78\xcf\x4a\x6b\x28\x9a\x5b\x51\x80\xeb\xf9\xd3\x2d\xb4\xce\x06\x2a\x82\xb2\x06\x82\x7d\x25\xc3\x76\x64\x77\x14\x12\xcf\x3f\x31\xc8\x0a\xd7\x35\xf9\x22\xfe\x4f\x4f\xcf\xd2\x1e\xa3\xbd\xe1\x34\xbc\xf7\xbe\x23\x27\x64\xab\xc4\x5b\xa3\x3f\xbe\xb5\x32\x54\xd3\xc2\x9a\x42\x86\x33\x21\x12\xe4\x69\xb7\xee\xad\x22\x5d\x5e\x60\x86\x17\xc3\xf9\xf9\xe8\x3c\x5a\xdc\x38\x15\x08\x6a\x9b\x43\xe9\x75\x0c\x4f\xc2\x52\x69\x62\x85\x0c\x70\x25\x42\xd3\x8a\x28\xf9\x60\xf3\x6f\xb2\x21\xe8\xfb\x71\x84\x5d\x5e\xde\xcc\x1e\xd9\x30\xf8\xe2\x35\xf4\x3d\x8b\x27\xc3\x5a\xcf\x71\x93\xc8\x75\xe0\x7e\x86\x89\xfe\xc0\x34\xba\xf2\x41\xba\x00\x9e\xa8\x4c\xd6\x36\x2a\x54\xd0\x4a\x27\x1b\x0a\xe4\xfc\x20\x33\x8f\xa0\x18\xdf\x3e\x94\xda\xe6\xa2\x70\x24\x03\xf1\xe1\x5d\x78\x6d\x73\x2f\xf2\x4e\xe9\x12\xd9\xae\x0b\x2f\xf0\x7d\x36\x5f\xfc\xef\x2d\xe0\x7c\x69\x5d\x93\x52\x99\x4c\x3f\x1d\x8a\x64\x40\xd5\xde\x9a\xe9\x68\x8b\x7f\xcd\x62\x06\x3f\xb6\x68\x64\x43\x98\x61\x6d\xf3\x08\xc6\x0b\xc0\x48\x87\x59\xfa\x4c\xb0\xff\xd9\x8f\x80\xaf\x87\x8e\x92\x03\x7c\xe1\xb1\x13\x3c\x3d\x7e\x06\xa7\xfb\x26\x20\xfb\x13\x00\x00\xff\xff\x4d\x82\x3a\xd3\x12\x03\x00\x00")

func jobScriptsInstallDslJobShBytes() ([]byte, error) {
	return bindataRead(
		_jobScriptsInstallDslJobSh,
		"job-scripts/install-dsl-job.sh",
	)
}

func jobScriptsInstallDslJobSh() (*asset, error) {
	bytes, err := jobScriptsInstallDslJobShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job-scripts/install-dsl-job.sh", size: 786, mode: os.FileMode(420), modTime: time.Unix(1532988742, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobScriptsInstallXmlJobSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\x4d\x4f\x1b\x31\x10\x3d\xe3\x5f\xf1\x30\x48\x01\x09\xc7\xa8\xbd\xa5\x04\x8a\x22\x40\xa1\xa8\xa9\x20\x12\xb9\x7a\x77\x87\xc4\xe0\xb5\xb7\xde\xd9\x10\x44\xf7\xbf\x57\xde\x44\xa5\x91\xc8\xcd\xf2\xcc\xbc\x8f\x79\x73\xb0\xaf\x9b\x3a\xea\xcc\x7a\x4d\x7e\x89\xcc\xd4\x0b\x51\x45\xeb\x99\xfc\x52\x88\x03\x3c\x1a\xcb\x78\x0a\x11\xb7\xe4\x5f\xac\xaf\xc1\x01\x2e\x98\x42\xbc\x2e\xac\x23\xec\x23\x6f\xa2\x83\xaa\xa1\xd4\x82\x4c\x01\xa5\x22\xfd\x6e\xa8\x66\xdc\x5c\x4d\xf1\xfe\x8e\xfe\x65\x65\xd1\xb6\xf8\x83\x79\xa4\x0a\xf2\xcb\xe9\x29\x26\x3f\x24\xce\xa1\x0b\x5a\x6a\xdf\x38\xf7\x4d\x14\x41\xec\x51\xbe\x08\x90\xa3\xbb\xf1\xa0\x23\xb5\x7e\xde\xf1\x3e\xaf\x79\xfb\x7d\x29\xf6\x6a\x47\x54\xe1\xab\x28\x82\xa7\x24\x6e\x4e\x8c\xd1\xc3\xfd\x35\xaa\x18\x98\x72\xb6\xc1\x83\xc3\x0b\x79\xb1\x06\xbb\x21\xee\x70\x3e\xed\x91\x22\x8f\x4d\x99\x4d\xd3\x7b\x78\x78\xd4\xf9\xe8\x7d\x08\xee\x8a\xe3\xba\x6e\x28\x6a\x53\x59\xbd\x2a\xdd\xc5\xaa\x32\xbc\x18\xe6\xc1\xe7\x86\x8f\xb4\xee\x5a\xee\xd7\x76\xaf\x2d\xb9\xe2\x44\x0e\xe4\xc9\xe6\xff\xb8\x77\x9c\x24\xbe\x46\xcb\x84\xe7\x90\x61\x55\xba\xb4\x3c\x83\x27\xeb\x48\xe4\x86\x71\xae\xb9\xac\x74\xa2\xbc\x0d\xd9\x4f\x53\x12\xda\xb6\x9f\xda\xce\xce\xae\x26\x77\x62\x53\x98\x95\x0e\x6d\x2b\xd2\xcf\xc6\xd6\x63\x72\x92\xb0\x76\xcc\x0f\x64\x07\xbf\xa3\x9a\x54\xe5\x91\xcc\x5a\xd6\x06\xf2\xb2\x28\xd2\xa2\x92\xce\xed\x09\x29\xfe\x05\x3c\xc3\xaf\xc9\xc3\x74\x7b\x47\x09\x66\xcc\x54\x5e\x78\x53\xd2\x70\x7b\xb4\x07\xa5\x0a\xc3\x46\x65\xd6\x9b\xf8\x86\xef\xbb\xec\xaa\xe5\xe6\x7a\x28\x42\xce\x54\x4a\x4b\x75\xb1\x0c\x70\xf8\x91\x91\xfc\xaf\x69\x14\xd2\x81\xb2\x9a\xbe\x55\x34\x60\x5a\x71\x8a\x47\xfe\x0d\x00\x00\xff\xff\x05\xc4\xa9\x6d\xcc\x02\x00\x00")

func jobScriptsInstallXmlJobShBytes() ([]byte, error) {
	return bindataRead(
		_jobScriptsInstallXmlJobSh,
		"job-scripts/install-xml-job.sh",
	)
}

func jobScriptsInstallXmlJobSh() (*asset, error) {
	bytes, err := jobScriptsInstallXmlJobShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job-scripts/install-xml-job.sh", size: 716, mode: os.FileMode(420), modTime: time.Unix(1532987293, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobdslSeedJobDsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xdd\x4e\xc3\x30\x0c\x85\xef\xf7\x14\xbe\x73\x86\x36\xde\x61\x80\x40\x9a\x2a\x06\xda\x13\x24\xed\x99\x96\x2e\x4b\xaa\xd8\x03\x26\xd4\x77\x47\x6d\xe9\x4f\x6e\xac\xf8\x3b\x76\xbe\x9c\x32\x70\xd4\x7b\xc0\x3e\x39\xc3\x65\x86\x55\x6c\x6b\xc4\x8b\x8f\xb2\xad\x93\x13\x5e\xd3\xef\x8a\x88\xc8\x85\x54\x5e\x0e\xd1\xf0\xc3\xd4\x9a\xda\x05\xbe\x10\x0c\xbf\x15\x87\xa7\x5d\xc1\xeb\x09\x4a\x69\xe3\xe7\x0d\x37\xbc\xa6\x6c\x78\x57\x8c\xac\x5d\xf5\xa5\x82\x94\xd9\x37\xea\x53\x34\xbc\x4f\xee\xe5\x58\x50\x9d\xdc\x86\xf4\x6c\x95\x06\x19\xa1\xa4\x67\x64\x1a\x5c\x86\x31\x2f\x4d\xb0\xf7\x77\x7b\x85\xe1\xe7\x3e\x45\x11\xdf\x63\xa4\xcf\x34\x36\xdb\x2b\x14\x59\x16\xae\x27\x1f\xf0\xd1\x01\xc3\x75\x72\x8f\x95\x04\xde\xd0\xf8\x70\x07\x67\xbd\xbe\x8a\xa2\x59\xce\x57\x12\x16\xb7\xee\xe0\x47\x91\xa3\x0d\xf3\xc2\xf9\xf3\xed\xff\xae\xf6\x2f\x00\x00\xff\xff\x04\xeb\x1c\x98\x64\x01\x00\x00")

func jobdslSeedJobDslBytes() ([]byte, error) {
	return bindataRead(
		_jobdslSeedJobDsl,
		"jobdsl/seed-job-dsl",
	)
}

func jobdslSeedJobDsl() (*asset, error) {
	bytes, err := jobdslSeedJobDslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jobdsl/seed-job-dsl", size: 356, mode: os.FileMode(420), modTime: time.Unix(1532986279, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pluginScriptsInstallPluginSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\x51\x4f\xdb\x30\x10\x7e\xc6\xbf\xe2\x30\x48\x05\x89\xd4\x68\x7b\x2b\xa5\xdb\x54\x01\xea\xc6\x56\x54\xaa\x81\x34\xed\xc1\x4d\x2e\x89\x87\x6b\x67\xb6\x53\x8a\x58\xfe\xfb\x64\x3b\x55\x19\x42\xdb\x32\x2d\x2f\x71\xec\xf3\x77\xdf\x7d\x77\x5f\xf6\x76\x59\x6d\x0d\x5b\x08\xc5\x50\xad\x60\xc1\x6d\x49\x2a\x23\x94\x43\xb5\x22\x64\x0f\x6e\xb8\x70\x90\x6b\x03\xef\x51\xdd\x09\x65\xc1\x69\x90\x9a\x67\xe4\xbe\x14\x12\x61\x17\xd2\xda\x48\x48\x2c\x24\x49\x89\x3c\x83\x24\x31\xf8\xbd\x46\xeb\xe0\xe2\x6c\x0e\x8f\x8f\xd0\x7f\x57\x09\x68\x1a\xf8\x01\x85\xc1\x0a\xe8\xab\xe3\x63\x98\x7e\xa0\x30\x02\x96\xe1\x8a\xa9\x5a\xca\x13\x92\x69\xb2\x83\x69\xa9\x81\x8e\x2f\x27\x83\x90\x54\xa8\x22\xe4\xfd\x16\xf3\xf6\xfb\x94\xec\x58\x89\x58\xc1\x6b\x92\x69\x85\x9e\x5c\x81\x0e\xc6\xd7\xb3\x73\xa8\x8c\x76\x98\x3a\xa1\x15\x38\x7d\x87\x8a\x44\xb0\x0b\x74\x01\xe7\xc5\x18\x4a\x52\x53\x2f\x17\x73\xbf\x3e\xdd\x3f\x08\x75\xf4\xb6\x84\xc3\xe1\xc4\xda\x1a\x0d\xe3\x95\x60\xeb\xa5\x7c\xb3\xae\xb8\x2b\x4f\x53\xad\x52\xee\x0e\x18\x0b\x21\xb3\x58\xee\xb9\x40\x99\x1d\xd1\x01\x3d\x6a\xf7\x0f\x7b\x87\xa4\xa5\x31\x51\xd6\x71\x29\x3d\x93\x4a\xd6\x85\x50\x41\x97\xab\xb0\x9c\x64\xd0\x34\x6f\xb7\xdf\x9f\xd1\x58\x4f\xb1\x69\x28\x89\xd2\xde\xc2\xd5\xf4\x7a\x0e\x49\x06\xbd\x61\x2b\xc6\x68\x28\x22\x64\x8b\x77\x4a\xff\x0a\x10\xd8\x68\xc8\x36\x10\xbd\xb6\x63\x68\xa0\x37\xd6\xbe\xdf\x2e\x99\x3f\x54\x38\x00\x87\x6b\xe7\xcb\x7d\x12\x41\x6f\x13\xaf\x61\x12\xc4\x1a\xc0\xfe\x56\x39\xfa\xa4\xc7\x91\xcc\x47\xae\x78\x81\x86\xb5\x14\x3f\x61\x8a\xd6\x72\xf3\x10\xe9\xd8\x67\x55\x75\xcb\xc0\x2c\xcf\x71\x86\xd6\x71\xe3\xfc\x00\xdc\x1b\xe1\x70\x23\x6a\xaa\x55\x2e\x0a\x3f\xa0\xb9\x90\x48\x52\xee\x60\xc4\xdc\xb2\x62\xcf\xc4\xe9\xbf\x24\x4e\xbf\xbd\x3d\x1c\x9e\x4d\x2f\xc9\x36\x62\x1c\xb7\x9b\x86\xf8\xfd\xb6\xa1\x37\x7e\x94\x7c\xa2\xae\xf0\x03\x1a\x68\x75\xbd\x46\x88\xc8\xe1\x8b\x77\x59\xe7\x7a\xbe\x9e\x80\x2b\x51\x11\x02\x00\xf0\x1b\x3b\xfb\xe3\xff\x6a\x69\x0f\x98\xe9\xf0\xf2\xcf\x9f\xdd\xbd\x89\xdc\x98\x3c\x02\x78\xa3\x47\xea\xa6\x56\xbf\x76\x9a\x6c\x71\x67\xb5\x52\x1e\x32\x1e\xd4\x86\x07\x9b\xfb\x04\x9d\x0c\x17\x10\x63\xf5\x19\x50\x9b\x1a\x51\x39\xff\x6b\xf8\x87\x96\x1d\x52\x48\x56\x5d\xc7\x3b\x66\x9c\xe3\xda\x91\x5c\xfc\x0c\x00\x00\xff\xff\x79\x8c\xd3\xd8\x9a\x05\x00\x00")

func pluginScriptsInstallPluginShBytes() ([]byte, error) {
	return bindataRead(
		_pluginScriptsInstallPluginSh,
		"plugin-scripts/install-plugin.sh",
	)
}

func pluginScriptsInstallPluginSh() (*asset, error) {
	bytes, err := pluginScriptsInstallPluginShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "plugin-scripts/install-plugin.sh", size: 1434, mode: os.FileMode(420), modTime: time.Unix(1531432614, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".DS_Store":                           Ds_store,
	"environment/jenkins-jvm-environment": environmentJenkinsJvmEnvironment,
	"environment/required-plugins":        environmentRequiredPlugins,
	"init-groovy/0-jenkins-config.groovy": initGroovy0JenkinsConfigGroovy,
	"job-scripts/delete-job.sh":           jobScriptsDeleteJobSh,
	"job-scripts/install-dsl-job.sh":      jobScriptsInstallDslJobSh,
	"job-scripts/install-xml-job.sh":      jobScriptsInstallXmlJobSh,
	"jobdsl/seed-job-dsl":                 jobdslSeedJobDsl,
	"plugin-scripts/install-plugin.sh":    pluginScriptsInstallPluginSh,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	".DS_Store": &bintree{Ds_store, map[string]*bintree{}},
	"environment": &bintree{nil, map[string]*bintree{
		"jenkins-jvm-environment": &bintree{environmentJenkinsJvmEnvironment, map[string]*bintree{}},
		"required-plugins":        &bintree{environmentRequiredPlugins, map[string]*bintree{}},
	}},
	"init-groovy": &bintree{nil, map[string]*bintree{
		"0-jenkins-config.groovy": &bintree{initGroovy0JenkinsConfigGroovy, map[string]*bintree{}},
	}},
	"job-scripts": &bintree{nil, map[string]*bintree{
		"delete-job.sh":      &bintree{jobScriptsDeleteJobSh, map[string]*bintree{}},
		"install-dsl-job.sh": &bintree{jobScriptsInstallDslJobSh, map[string]*bintree{}},
		"install-xml-job.sh": &bintree{jobScriptsInstallXmlJobSh, map[string]*bintree{}},
	}},
	"jobdsl": &bintree{nil, map[string]*bintree{
		"seed-job-dsl": &bintree{jobdslSeedJobDsl, map[string]*bintree{}},
	}},
	"plugin-scripts": &bintree{nil, map[string]*bintree{
		"install-plugin.sh": &bintree{pluginScriptsInstallPluginSh, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
